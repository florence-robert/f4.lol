---
import me from '~/assets/images/anime-self.png';
const phonetic = `/ˈflɒrəns ˈɹɑbɚt/`;
const description = `I'm a seasoned software engineer with a passion for all things tech. I have a loads of interests but at the top
of the list you'll find a love for electronic music, 3D printing, manga, speedrunning, and gaming.`;
---

<style>
  .text-3d {
    text-shadow:
      -2px -2px 0 oklch(var(--p)),
      2px -2px 0 oklch(var(--p)),
      -2px 2px 0 oklch(var(--p)),
      2px 2px 0 oklch(var(--p)),
      -0.09em 0 0 oklch(var(--a)),
      0.09em 0 0 oklch(var(--s));
  }
</style>
<main id="main" class="grow hero bg-base-300">
  <article class="hero-content text-left">
    <section class="max-w-md">
      <header class="flex">
        <h1 x-data="{ swapped: false }" class="text-5xl font-bold">
          Hey there! I'm

          <span
            x-on:mouseover="swapped = true"
            x-on:mouseout="swapped = false"
            x-bind:class="swapped ? 'swap-active' : ''"
            tabindex="0"
            aria-pressed="false"
            class="swap swap-flip"
          >
            <strong class="italic text-primary-content text-3d swap-off">Flo Wolfe</strong>
            <strong class="text-primary-content text-3d swap-on" aria-hidden="true">{phonetic}</strong>
          </span>
        </h1>

        <div class="flex flex-col">
          <figure class="avatar w-20 h-20">
            <div class="rounded-full ring ring-secondary ring-offset-base-100 ring-offset-2">
              <img src={me.src} alt="Anime portrait of Flo Wolfe" />
            </div>
          </figure>
          <img class="mt-2" id="pronouns-badge" alt="Pronouns Shields Badge" />
        </div>
      </header>
      <p class="py-6">
        {description}
      </p>
    </section>
  </article>

  <script>
    import chroma from 'chroma-js';
    const rootElement = document.documentElement;

    function getCssVariableValue(varName: string) {
      return getComputedStyle(rootElement).getPropertyValue(varName).trim().split(' ').map(Number);
    }

    function updateBadgeUrl() {
      const labelOklch = getCssVariableValue('--p');
      const badgeOklch = getCssVariableValue('--s');
      const labelColor = chroma.oklch(...labelOklch).hex();
      const badgeColor = chroma.oklch(...badgeOklch).hex();
      const labelColorEncoded = encodeURIComponent(labelColor);
      const badgeColorEncoded = encodeURIComponent(badgeColor);

      console.log({ labelColor, badgeColor, labelColorEncoded, badgeColorEncoded });
      const badgeUrl = `https://img.shields.io/endpoint?url=https%3A%2F%2Fpronoundb.org%2Fshields%2F65db97a4cf2d0494c7de8e98.json&style=flat&labelColor=${labelColorEncoded}&color=${badgeColorEncoded}`;
      const badge = document.getElementById('pronouns-badge') as HTMLImageElement;
      badge.src = badgeUrl;
    }

    const observer = new MutationObserver((mutationsList) => {
      for (const mutation of mutationsList) {
        console.log(mutation.type, mutation.attributeName);
        // Once the root HTML node has `data-theme` it means we can actually pull the correct theme and colors for the badge
        if (mutation.type === 'attributes' && mutation.attributeName === 'data-theme') {
          updateBadgeUrl();
        }
      }
    });
    console.log({ observer });
    observer.observe(rootElement, { attributes: true, attributeFilter: ['data-theme'] });
  </script>
</main>
